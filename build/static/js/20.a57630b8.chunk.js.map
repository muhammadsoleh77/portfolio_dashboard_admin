{"version":3,"sources":["components/Users/DaftarPengguna/EditPengguna.js","Endpoint.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["EditPengguna","props","handleChangeEdit","e","setState","target","name","value","handleChangeGenderLaki","state","genderLaki","handleChangeGenderPerempuan","genderPerempuan","OptionRole","x","label","handleChangeRole","namaRol","role","exist","dataRoles","length","a","ada","z","push","idTabel","selectedPo","removeRole","index","array","splice","OptionPo","idPo","nama","handleChangePo","OptionPoLoket","handleChangePoLoket","selectedPoLoket","paramPo","orderBy","pageNo","pageRow","API_ENDPOINT","post","then","res","console","log","data","content","dataLoket","OptionPoCrew","handleChangePoCrew","selectedPoCrew","get","dataBusCrew","handleChangePos","handleChangeCrew","handleChangeLoket","dataRole","details","dataUser","dataPo","dataBusByIdPo","fields","errors","this","endpointUserById","endpointRole","endpointAllPo","match","params","idUser","nohp","password","gender","tglLahir","email","idfb","idgplus","dataRol","forEach","doc","dataDetail","catch","error","alert","response","message","formIsValid","field","preventDefault","paramEditUser","put","history","rol","className","map","el","placeholder","onChange","options","id","idBus","href","class","onSubmit","tambahData","bind","type","onClick","checked","style","color","Component","token","localStorage","getItem","instance","axios","create","baseURL","headers","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","_arrayLikeToArray","arr","len","i","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","from","o","minLen","n","prototype","toString","call","slice","constructor","test","TypeError"],"mappings":"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","file":"static/js/20.a57630b8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Select from 'react-select'\r\n\r\nimport API_ENDPOINT from '../../../Endpoint'\r\n\r\nexport default class EditPengguna extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dataRole: [],\r\n            dataRoles: [],\r\n            details: [],\r\n            dataUser: [],\r\n            dataPo: [],\r\n            dataBusByIdPo: [],\r\n            dataBusCrew: [],\r\n            dataLoket: [],\r\n\r\n            genderLaki: \"Laki-laki\",\r\n            genderPerempuan: \"Perempuan\",\r\n            \r\n            fields: {},\r\n            errors: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.endpointUserById()\r\n        this.endpointRole()\r\n        this.endpointAllPo()\r\n    }\r\n\r\n    endpointAllPo() {\r\n        API_ENDPOINT.get('/admin/po/getAll')\r\n        .then(res => {\r\n            this.setState({\r\n                dataPo: res.data\r\n            })\r\n        })\r\n    }\r\n\r\n    endpointRole() {\r\n        API_ENDPOINT.get('/admin/role/list')\r\n        .then(res => {\r\n            this.setState({\r\n                dataRole: res.data\r\n            })\r\n        })\r\n    }\r\n\r\n    endpointUserById() {\r\n        API_ENDPOINT.get('/admin/user/get/?idUser=' + this.props.match.params.idUser)\r\n        .then(res => {\r\n            // console.log(res);\r\n            this.setState({\r\n                dataUser: res.data,\r\n                nohp: res.data.nohp,\r\n                name: res.data.name,\r\n                password: res.data.password,\r\n                gender: res.data.gender,\r\n                tglLahir: res.data.tglLahir,\r\n                email: res.data.email,\r\n                idfb: res.data.idfb,\r\n                idgplus: res.data.idgplus,\r\n                details: res.data.details,\r\n            })\r\n\r\n            var dataRol = []\r\n            this.state.details.forEach(function(doc) {\r\n                dataRol.push(doc.role)\r\n            })\r\n            this.setState({dataRol})\r\n\r\n            var dataDetail = this.state.details\r\n            this.setState({\r\n                dataRoles: dataDetail\r\n            }, () => {console.log(this.state.dataRoles);})\r\n\r\n            // for(var a=0; a<this.state.details.length; a++) {\r\n            //     var id = this.state.details[a].idTabel\r\n            //     // var namaRoles = []\r\n            //     // var t = this.state.details[a].role\r\n\r\n            //     // var coba = namaRoles.push({t})\r\n            //     // console.log(coba);\r\n            //     this.setState({\r\n            //         selectedPo: id,\r\n            //         selectedBus: id,\r\n            //         // namaRoles\r\n            //         // dataRoles : t\r\n            //     }, () => {console.log(this.state.dataRoles);})\r\n            // }\r\n\r\n        })\r\n        .catch(error => {\r\n            alert(error.response.data.message)\r\n        })\r\n    }\r\n\r\n    handleValidation(){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        // // Validasi Bus\r\n        // if(!fields[\"idTable\"]){\r\n        //     formIsValid = false;\r\n        //     errors[\"idTable\"] = \"Tidak boleh kosong\";\r\n        // }\r\n\r\n        // Validasi Nama\r\n        if(!fields[\"name\"]){\r\n            formIsValid = false;\r\n            errors[\"name\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        // Validasi Role\r\n        if(!fields[\"password\"]){\r\n            formIsValid = false;\r\n            errors[\"password\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        // Validasi Email\r\n        if(!fields[\"email\"]){\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        // Validasi Gender\r\n        if(!fields[\"gender\"]){\r\n            formIsValid = false;\r\n            errors[\"gender\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        // Validasi idFb\r\n        if(!fields[\"idfb\"]){\r\n            formIsValid = false;\r\n            errors[\"idfb\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        // Validasi idGplus\r\n        if(!fields[\"idgplus\"]){\r\n            formIsValid = false;\r\n            errors[\"idgplus\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        // Validasi Tgl Lahir\r\n        if(!fields[\"tglLahir\"]){\r\n            formIsValid = false;\r\n            errors[\"tglLahir\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        // Validasi No HP\r\n        if(!fields[\"nohp\"]){\r\n            formIsValid = false;\r\n            errors[\"nohp\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        this.setState({errors: errors});\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChange(field, e){\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        this.setState({fields});\r\n    }\r\n\r\n    handleChangeEdit = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleChangeGenderLaki = (e) => {\r\n        this.setState({\r\n            [e.target.name]: this.state.genderLaki\r\n        })\r\n    }\r\n\r\n    handleChangeGenderPerempuan = (e) => {\r\n        this.setState({\r\n            [e.target.name]: this.state.genderPerempuan\r\n        })\r\n    }\r\n\r\n    // START OPTION ROLE\r\n    OptionRole = (x) => {\r\n        return {value: x.name, label: x.name}\r\n    }\r\n\r\n    handleChangeRole = (e) => {\r\n\r\n        this.setState({namaRol: e.value})\r\n\r\n        const role = e.value\r\n\r\n        var exist = false;\r\n        if(this.state.dataRoles.length>0) {\r\n            for(var a=0; a<this.state.dataRoles.length; a++) {\r\n                if(this.state.dataRoles[a].role === role) {\r\n                    exist = true;\r\n                    this.setState({\r\n                        ada: exist\r\n                    })\r\n                    a = this.state.dataRoles.length\r\n                }\r\n            }\r\n            if(!exist) {\r\n                var z = this.state.dataRoles;\r\n                z.push({\r\n                    role: e.value,\r\n                    idTabel: this.state.selectedPo\r\n                })\r\n                this.setState({\r\n                    dataRoles: z\r\n                })\r\n                // console.log(this.state.details);\r\n                // this.state.dataRoles.push({name})\r\n            }\r\n        } else {\r\n            var x = this.state.dataRoles;\r\n                x.push({\r\n                    role: e.value,\r\n                    idTabel: this.state.selectedPo\r\n                })\r\n            this.setState({\r\n                dataRoles: x\r\n            })\r\n            // console.log(this.state.details);\r\n            // this.state.dataRoles.push({name})\r\n        }\r\n        // console.log(this.state.dataRoles);\r\n\r\n    }\r\n    // END ROLE\r\n\r\n    removeRole = (index) => {\r\n        var array = this.state.dataRoles;\r\n        if (index > -1) {\r\n            array.splice(index, 1);\r\n            this.setState({dataRoles: array});\r\n        }\r\n    }\r\n\r\n    // START OPTION P.O\r\n    OptionPo = (x) => {\r\n        return {value: x.idPo, label: x.nama}\r\n    }\r\n\r\n    handleChangePo = (e) => {\r\n        this.setState({selectedPo: e.value})\r\n    }\r\n    // END P.O\r\n\r\n    // START OPTION P.O LOKET\r\n    OptionPoLoket = (x) => {\r\n        return {value: x.idPo, label: x.nama}\r\n    }\r\n\r\n    handleChangePoLoket = (e) => {\r\n        this.setState({selectedPoLoket: e.value})\r\n\r\n        const paramPo = {\r\n            idPo: e.value,\r\n            orderBy: 'idPo',\r\n            pageNo: 0,\r\n            pageRow: 100\r\n        }\r\n\r\n        API_ENDPOINT.post('/admin/loket/list', paramPo)\r\n        .then(res => {\r\n            console.log(res.data.content);\r\n            this.setState({\r\n                dataLoket: res.data.content\r\n            })\r\n        })\r\n\r\n        // for(var i=0; i<this.state.dataRoles.length; i++) {\r\n        //     var x = this.state.dataRoles\r\n        //     x.push({\r\n        //         name: this.state.dataRoles[i].name,\r\n        //         idTabel: e.value\r\n        //     })\r\n        //     this.setState({\r\n        //         dataRoles: x\r\n        //     })\r\n        //     console.log(x);\r\n        // }\r\n    }\r\n    // END P.O LOKET\r\n\r\n    // START OPTION P.O CREW\r\n    OptionPoCrew = (x) => {\r\n        return {value: x.idPo, label: x.nama}\r\n    }\r\n\r\n    handleChangePoCrew = (e) => {\r\n        this.setState({selectedPoCrew: e.value})\r\n\r\n        API_ENDPOINT.get('/admin/bus/listAll/' + e.value)\r\n        .then(res => {\r\n            this.setState({\r\n                dataBusCrew : res.data\r\n            })\r\n        })\r\n    }\r\n    // END OPTION P.O CREW\r\n\r\n    handleChangePos = (e, index) => {\r\n        console.log(e.target.value);\r\n        const dataRoles = [...this.state.dataRoles]\r\n\r\n        dataRoles[index].idTabel = e.target.value\r\n\r\n        this.setState({dataRoles})\r\n    }\r\n\r\n    // // START OPTION P.O UNTUK GET BUS TOLE CREW & LOKET\r\n    // OptionPoCrew = (x) => {\r\n    //     return {value: x.idPo, label: x.nama}\r\n    // }\r\n\r\n    // handleChangePoCrewLoket = (e) => {\r\n    //     this.setState({selectedPo: e.value})\r\n\r\n    //     API_ENDPOINT.get('/admin/bus/listAll/' + e.value)\r\n    //     .then(res => {\r\n    //         this.setState({dataBusByIdPo: res.data})\r\n    //     })\r\n    // }\r\n    // // END OPTION P.O UNTUK GET BUS\r\n\r\n    // // START OPTION BUS\r\n    // OptionBus = (x) => {\r\n    //     return {value: x.idBus, label: x.id}\r\n    // }\r\n\r\n    // handleChangeBus = (e) => {\r\n    //     this.setState({selectedBus: e.value})\r\n    // }\r\n    // // END BUS\r\n\r\n    handleChangeCrew = (e, index) => {\r\n        console.log(e.target.value);\r\n        const dataRoles = [...this.state.dataRoles]\r\n\r\n        dataRoles[index].idTabel = e.target.value\r\n\r\n        this.setState({dataRoles})\r\n    }\r\n\r\n    handleChangeLoket = (e, index) => {\r\n        const dataRoles = [...this.state.dataRoles]\r\n\r\n        dataRoles[index].idTabel = e.target.value\r\n\r\n        this.setState({dataRoles})\r\n    }\r\n\r\n    tambahData(e) {\r\n        e.preventDefault()\r\n\r\n        // var fff = []\r\n        // this.state.dataRoles.forEach(function(doc) {\r\n        //     if(doc.role === \"ROLE_PO\" || doc.role === \"ROLE_LOKET\" || doc.role === \"ROLE_CREW\") {\r\n        //         if(!doc.idTabel) {\r\n        //             fff.push(doc)\r\n        //             console.log(fff);\r\n        //             alert('harus diisi id tabel');\r\n        //         }\r\n        //     }\r\n        // })\r\n        // // console.log(fff);\r\n        // // this.setState({dataRoles: fff}, () => {console.log(this.state.dataRoles);})\r\n        // var c\r\n        // for(var q=0; q<this.state.dataRoles; q++) {\r\n        //     c = this.state.dataRoles[q].role\r\n        //     // if(this.state.dataRoles[q].role === \"ROLE_PO\" || this.state.dataRoles[q].role === \"ROLE_CREW\" this.state.dataRoles[q].role === \"ROLE_LOKET\") {\r\n        //     //     if(!this.state.dataRoles[q].idTabel) {\r\n        //     //         alert('harus isi tabel id');\r\n        //     //     }\r\n        //     // }\r\n        //     console.log(c);\r\n        // }\r\n\r\n        const paramEditUser = {\r\n            idUser: this.props.match.params.idUser,\r\n            email: this.state.email,\r\n            // foto: this.state.imgLogo,\r\n            gender: this.state.gender,\r\n            idfb: this.state.idfb,\r\n            idgplus: this.state.idgplus,\r\n            name: this.state.name,\r\n            nohp: this.state.nohp,\r\n            // password: this.state.fields['password'],\r\n            role: this.state.dataRoles,\r\n            tglLahir: this.state.tglLahir\r\n        }\r\n        console.log(paramEditUser);\r\n\r\n        // if(this.handleValidation()) {\r\n            API_ENDPOINT.put('/admin/user/edit', paramEditUser)\r\n            .then(res => {\r\n                // console.log(res);\r\n                alert(res.data.message)\r\n                this.props.history.push('/user/daftarPengguna')\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response);\r\n                alert(error.response.data.message)\r\n            })\r\n        // }\r\n    }\r\n\r\n    render() {\r\n\r\n        // const idUser = this.props.match.params.idUser\r\n        // console.log(idUser);\r\n\r\n        let rol;\r\n        // let dataTabel;\r\n\r\n        if(this.state.namaRol === 'ROLE_PO') {\r\n            rol = <div className=\"form-group\">\r\n                <label>Daftar P.O</label>\r\n                <table className=\"table table-bordered text-nowrap\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-center\">ID TABEL</th>\r\n                            <th className=\"text-center\">Nama P.O</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.dataPo.map((el) => (\r\n                                <tr>\r\n                                    <td className=\"text-center\">{el.idPo}</td>\r\n                                    <td className=\"text-center\">{el.nama}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        } else if(this.state.namaRol === 'ROLE_LOKET') {\r\n            rol = <div className=\"form-group\">\r\n                <label>Pilih P.O</label>\r\n                <Select\r\n                    name=\"po\"\r\n                    placeholder=\"Pilih P.O\"\r\n                    onChange={this.handleChangePoLoket}\r\n                    options={this.state.dataPo.map(x => this.OptionPoLoket(x))}\r\n                />\r\n            {\r\n                this.state.selectedPoLoket && (\r\n                    <div className=\"form-group\">\r\n                        <label>Daftar Loket</label>\r\n                        <table className=\"table table-bordered text-nowrap\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"text-center\">ID TABEL</th>\r\n                                    <th className=\"text-center\">Nama Loket</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.dataLoket.map((el) => (\r\n                                        <tr>\r\n                                            <td className=\"text-center\">{el.id}</td>\r\n                                            <td className=\"text-center\">{el.nama}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        } else if(this.state.namaRol === 'ROLE_CREW') {\r\n            rol = <div className=\"form-group\">\r\n                <label>Pilih P.O</label>\r\n                <Select\r\n                    name=\"po\"\r\n                    placeholder=\"Pilih P.O\"\r\n                    onChange={this.handleChangePoCrew}\r\n                    options={this.state.dataPo.map(x => this.OptionPoCrew(x))}\r\n                />\r\n            {\r\n                this.state.selectedPoCrew && (\r\n                <div className=\"form-group\">\r\n                    <label>Daftar Bus</label>\r\n                    <table className=\"table table-bordered text-nowrap\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-center\">ID TABEL</th>\r\n                                <th className=\"text-center\">Nama Bus</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.dataBusCrew.map((el) => (\r\n                                    <tr>\r\n                                        <td className=\"text-center\">{el.idBus}</td>\r\n                                        <td className=\"text-center\">{el.id}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                )\r\n            }\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid header-fluid\">\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-sm-6\">\r\n                        <ol className=\"breadcrumb float-sm-left\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"# \"><b>Home</b></a></li>\r\n                            <li className=\"breadcrumb-item active\"><b>Edit Pengguna</b></li>\r\n                        </ol>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <section class=\"content\">\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"card card-primary\">\r\n                                    <div class=\"card-header\">\r\n                                        <h3 class=\"card-title\">Edit Pengguna</h3>\r\n                                    </div>\r\n                                    <form onSubmit={this.tambahData.bind(this)}>\r\n                                        <div class=\"card-body\">\r\n                                            {/* <div class=\"form-group\">\r\n                                                <label>Pilih P.O</label>\r\n                                                <select class=\"form-control\" onChange={this.changePo} style={{ width: '100%' }}>\r\n                                                    <option disabled selected>Pilih P.O</option>\r\n                                                    {\r\n                                                        this.state.dataPo.map((el) => {\r\n                                                            return (\r\n                                                                <option key={el.idPo} value={el.idPo}>{el.nama}</option>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </div> */}\r\n                                            {/* <div class=\"form-group\">\r\n                                                <label>Pilih Bus</label>\r\n                                                <select class=\"form-control\" onChange={this.handleChange.bind(this, 'idTable')} style={{ width: '100%' }}>\r\n                                                    <option disabled selected>Pilih Bus</option>\r\n                                                    <option value=\"1\">BUS 001</option>\r\n                                                    <option value=\"2\">BUS 002</option>\r\n                                                    <option value=\"3\">BUS 003</option>\r\n                                                </select>\r\n                                                <span style={{color:'red'}}> {this.state.errors[\"idTable\"]} </span><br/>\r\n                                            </div> */}\r\n                                            <div class=\"form-group\">\r\n                                                <label>No Handphone (Default Username)</label>\r\n                                                <input className=\"form-control\" type=\"text\" name=\"nohp\" value={this.state.nohp} onChange={this.handleChangeEdit} />\r\n                                                {/* <span style={{color:'red'}}> {this.state.errors[\"nohp\"]} </span><br/> */}\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label>Nama Pengguna</label>\r\n                                                <input className=\"form-control\" type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChangeEdit} />\r\n                                                {/* <span style={{color:'red'}}> {this.state.errors[\"name\"]} </span><br/> */}\r\n                                            </div>\r\n                                            {/* <div class=\"form-group\">\r\n                                                <label>Password</label>\r\n                                                <input className=\"form-control\" type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange.bind(this,\"password\")} />\r\n                                            </div> */}\r\n                                            <div class=\"form-group\">\r\n                                                <label>Pilih Role</label>\r\n                                                <Select\r\n                                                    name=\"role\"\r\n                                                    placeholder=\"Pilih Role\"\r\n                                                    onChange={this.handleChangeRole}\r\n                                                    options={this.state.dataRole.map(x => this.OptionRole(x))}\r\n                                                />\r\n                                                {/* <select class=\"form-control\" onChange={this.handleChangeRole} style={{ width: '100%' }}>\r\n                                                    <option disabled selected>Pilih Role</option>\r\n                                                    {\r\n                                                        this.state.dataRole.map((el) => {\r\n                                                            return (\r\n                                                                <option key={el.id} value={el.name}>{el.name}</option>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                                <span style={{color:'red'}}> {this.state.errors[\"roleName\"]} </span><br/> */}\r\n                                            </div>\r\n                                            <div>\r\n                                                {rol}\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label>Role Terpilih</label>\r\n                                                <div className=\"lintasan\">\r\n                                                    {\r\n                                                        this.state.dataRoles.map((el, index) => {\r\n                                                            // console.log(el);\r\n                                                            // console.log(this.state.dataRol);\r\n                                                            // if(el.role === 'ROLE_CREW' && el.idTabel === this.state.selectedBus)\r\n                                                            if(el.role === 'ROLE_PO') {\r\n                                                                return(\r\n                                                                    <span>\r\n                                                                        <i class=\"btn btn-city btn-xs\">\r\n                                                                            {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                                            <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                            {/* <Select\r\n                                                                                name=\"po\"\r\n                                                                                placeholder=\"Pilih P.O\"\r\n                                                                                onChange={this.handleChangePo}\r\n                                                                                options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                                            /> */}\r\n                                                                            <input class=\"form-control\" type=\"number\" onChange={(e) => this.handleChangePos(e, index)} value={el.idTabel} name=\"urutan\"  placeholder=\"Input ID Tabel\" />\r\n                                                                        </i>\r\n                                                                        <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    </span>\r\n                                                                )\r\n                                                            } else if(el.role === 'ROLE_USER') {\r\n                                                                return(\r\n                                                                    <span>\r\n                                                                        <i class=\"btn btn-city btn-xs\">\r\n                                                                            {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                                            <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                            {/* <Select\r\n                                                                                name=\"po\"\r\n                                                                                placeholder=\"Pilih P.O\"\r\n                                                                                onChange={this.handleChangePo}\r\n                                                                                options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                                            /> */}\r\n                                                                            {/* <input class=\"form-control\" type=\"number\" onChange={(e) => this.handleChangeUser(e, index)} name=\"urutan\"  placeholder=\"Input ID Tabel\" /> */}\r\n                                                                        </i>\r\n                                                                        <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    </span>\r\n                                                                )\r\n                                                            } else if(el.role === 'ROLE_ADMIN') {\r\n                                                                return(\r\n                                                                    <span>\r\n                                                                        <i class=\"btn btn-city btn-xs\">\r\n                                                                            {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                                            <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                            {/* <Select\r\n                                                                                name=\"po\"\r\n                                                                                placeholder=\"Pilih P.O\"\r\n                                                                                onChange={this.handleChangePo}\r\n                                                                                options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                                            /> */}\r\n                                                                            {/* <input class=\"form-control\" type=\"number\" onChange={(e) => this.handleChangeUser(e, index)} name=\"urutan\"  placeholder=\"Input ID Tabel\" /> */}\r\n                                                                        </i>\r\n                                                                        <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    </span>\r\n                                                                )\r\n                                                            } else if(el.role === 'ROLE_AGEN') {\r\n                                                                return(\r\n                                                                    <span>\r\n                                                                        <i class=\"btn btn-city btn-xs\">\r\n                                                                            {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                                            <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                            {/* <Select\r\n                                                                                name=\"po\"\r\n                                                                                placeholder=\"Pilih P.O\"\r\n                                                                                onChange={this.handleChangePo}\r\n                                                                                options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                                            /> */}\r\n                                                                            {/* <input class=\"form-control\" type=\"number\" onChange={(e) => this.handleChangeUser(e, index)} name=\"urutan\"  placeholder=\"Input ID Tabel\" /> */}\r\n                                                                        </i>\r\n                                                                        <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    </span>\r\n                                                                )\r\n                                                            } else if(el.role === 'ROLE_PARTNER') {\r\n                                                                return(\r\n                                                                    <span>\r\n                                                                        <i class=\"btn btn-city btn-xs\">\r\n                                                                            {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                                            <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                            {/* <Select\r\n                                                                                name=\"po\"\r\n                                                                                placeholder=\"Pilih P.O\"\r\n                                                                                onChange={this.handleChangePo}\r\n                                                                                options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                                            /> */}\r\n                                                                            {/* <input class=\"form-control\" type=\"number\" onChange={(e) => this.handleChangeUser(e, index)} name=\"urutan\"  placeholder=\"Input ID Tabel\" /> */}\r\n                                                                        </i>\r\n                                                                        <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    </span>\r\n                                                                )\r\n                                                            } else if(this.state.selectedPoCrew || el.role === 'ROLE_CREW'){\r\n                                                                return (\r\n                                                                    <span>\r\n                                                                        <i class=\"btn btn-city btn-xs\">\r\n                                                                            {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                                            <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                            {/* <Select\r\n                                                                                name=\"po\"\r\n                                                                                placeholder=\"Pilih P.O\"\r\n                                                                                onChange={this.handleChangePoCrewLoket}\r\n                                                                                options={this.state.dataPo.map(x => this.OptionPoCrew(x))}\r\n                                                                            /><br/>\r\n                                                                            <Select\r\n                                                                                name=\"bus\"\r\n                                                                                placeholder=\"Pilih Bus\"\r\n                                                                                value={this.state.dataBusByIdPo.map(x => this.OptionBus(x)).filter(option => option.value === this.state.selectedBus)}\r\n                                                                                onChange={this.handleChangeBus}\r\n                                                                                options={this.state.dataBusByIdPo.map(x => this.OptionBus(x))}\r\n                                                                            /> */}\r\n                                                                            <input class=\"form-control\" type=\"number\" value={el.idTabel} onChange={(e) => this.handleChangeCrew(e, index)} name=\"urutan\"  placeholder=\"Input ID Tabel\" />\r\n                                                                        </i>\r\n                                                                        <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    </span>\r\n                                                                )\r\n                                                            } else if(this.state.selectedPoLoket || el.role === 'ROLE_LOKET') {\r\n                                                                return(\r\n                                                                    <span>\r\n                                                                        <i class=\"btn btn-city btn-xs\">\r\n                                                                            {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                                            <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                            {/* <Select\r\n                                                                                name=\"po\"\r\n                                                                                placeholder=\"Pilih P.O\"\r\n                                                                                onChange={this.handleChangePo}\r\n                                                                                options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                                            /> */}\r\n                                                                            <input class=\"form-control\" type=\"number\" value={el.idTabel} onChange={(e) => this.handleChangeLoket(e, index)} name=\"urutan\"  placeholder=\"Input ID Tabel\" />\r\n                                                                        </i>\r\n                                                                        <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    </span>\r\n                                                                )\r\n                                                            } else {\r\n                                                                return(\r\n                                                                    // <span>\r\n                                                                    //     <i class=\"btn btn-city btn-xs\">\r\n                                                                    //         {/* {el.role}&nbsp;&nbsp;&nbsp; */}\r\n                                                                    //         <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                    //         <input class=\"form-control\" type=\"number\" value={el.idTabel} name=\"urutan\"  placeholder=\"Input ID Tabel\" />\r\n                                                                    //     </i>\r\n                                                                    //     <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    // </span>\r\n                                                                    <div></div>\r\n                                                                )\r\n                                                            }\r\n\r\n                                                            // if(el.role === 'ROLE_CREW' && el.idTabel !== this.state.selectedBus) \r\n                                                            //     return (\r\n                                                            //         <span>\r\n                                                            //             <i class=\"btn btn-city btn-xs\">\r\n                                                            //                 {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                            //                 <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                            //                 {/* <input class=\"form-control\" type=\"number\" name=\"urutan\"  placeholder=\"input urutan\" /> */}\r\n                                                            //                 <Select\r\n                                                            //                     name=\"po\"\r\n                                                            //                     placeholder=\"Pilih P.O\"\r\n                                                            //                     onChange={this.handleChangePoCrewLoket}\r\n                                                            //                     options={this.state.dataPo.map(x => this.OptionPoCrew(x))}\r\n                                                            //                 /><br/>\r\n                                                            //                 <Select\r\n                                                            //                     name=\"bus\"\r\n                                                            //                     placeholder=\"Pilih Bus\"\r\n                                                            //                     onChange={this.handleChangeBus}\r\n                                                            //                     options={this.state.dataBusByIdPo.map(x => this.OptionBus(x))}\r\n                                                            //                 />\r\n                                                            //             </i>\r\n                                                            //             <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                            //         </span>\r\n                                                            //     )\r\n                                                            \r\n                                                            // if(el.role === 'ROLE_PO' && el.idTabel === this.state.selectedPo)\r\n                                                            //     return (\r\n                                                            //         <span>\r\n                                                            //             <i class=\"btn btn-city btn-xs\">\r\n                                                            //                 {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                            //                 <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                            //                 {/* <Select\r\n                                                            //                     name=\"po\"\r\n                                                            //                     placeholder=\"Pilih P.O\"\r\n                                                            //                     value={this.state.dataPo.map(x => this.OptionPo(x)).filter(option => option.value === this.state.selectedPo)}\r\n                                                            //                     onChange={this.handleChangePo}\r\n                                                            //                     options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                            //                 /> */}\r\n                                                            //                 <input class=\"form-control\" type=\"number\" onChange={(e) => this.handleChangePos(e, index)} name=\"urutan\"  placeholder=\"Input ID Tabel\" />\r\n                                                            //             </i>\r\n                                                            //             <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                            //         </span>\r\n                                                            //     )\r\n                                                            \r\n                                                            // if(el.role === 'ROLE_PO' && el.idTabel !== this.state.selectedPo)\r\n                                                            //     return (\r\n                                                            //         <span>\r\n                                                            //             <i class=\"btn btn-city btn-xs\">\r\n                                                            //                 {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                            //                 <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                            //                 {/* <input class=\"form-control\" type=\"number\" name=\"urutan\"  placeholder=\"input urutan\" /> */}\r\n                                                            //                 <Select\r\n                                                            //                     name=\"po\"\r\n                                                            //                     placeholder=\"Pilih P.O\"\r\n                                                            //                     onChange={this.handleChangePo}\r\n                                                            //                     options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                            //                 />\r\n                                                            //             </i>\r\n                                                            //             <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                            //         </span>\r\n                                                            //     )\r\n\r\n                                                            // return (\r\n                                                            //     // <span>\r\n                                                            //     //     <i class=\"btn btn-city btn-xs\">\r\n                                                            //     //         {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                            //     //         <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                            //     //         <input class=\"form-control\" type=\"number\" value={el.idTabel} name=\"urutan\"  placeholder=\"Input ID Tabel\" />\r\n                                                            //     //     </i>\r\n                                                            //     //     <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                            //     // </span>\r\n                                                            //     <div></div>\r\n                                                            // )\r\n                                                        })\r\n                                                    }\r\n                                                    {/* {\r\n                                                        this.props.lintasans.map((el, index) => {\r\n                                                            // console.log(el);\r\n                                                            return(\r\n                                                                <span>\r\n                                                                    <i class=\"btn btn-city btn-xs\">\r\n                                                                        {el.namaLokasi}&nbsp;&nbsp;&nbsp;\r\n                                                                        <span onClick={this.props.removeLintasan.bind(this, index)}>&times;</span><br/>\r\n                                                                        <input class=\"form-control\" type=\"number\" name=\"urutan\" onChange={(e) => this.props.urutan(e.target, el)} placeholder=\"input urutan\" />\r\n                                                                    </i>\r\n                                                                    <span class=\"strip\"> ---- </span>\r\n                                                                </span>\r\n                                                            )\r\n                                                        })\r\n                                                    } */}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label>Jenis Kelamin</label>\r\n                                                <div className=\"radio\">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        name=\"gender\" \r\n                                                        value={this.state.gender}\r\n                                                        checked={this.state.gender === \"Laki-laki\"}\r\n                                                        onChange={this.handleChangeGenderLaki} /> Laki-laki &nbsp;&nbsp;&nbsp;\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        name=\"gender\" \r\n                                                        value={this.state.gender}\r\n                                                        checked={this.state.gender === \"Perempuan\"}\r\n                                                        onChange={this.handleChangeGenderPerempuan} /> Perempuan &nbsp;&nbsp;&nbsp;\r\n                                                </div>\r\n                                                <span style={{color:'red'}}> {this.state.errors[\"gender\"]} </span><br/>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label>Tanggal Lahir</label>\r\n                                                <input className=\"form-control\" type=\"date\" name=\"tglLahir\" value={this.state.tglLahir} onChange={this.handleChangeEdit} />\r\n                                                {/* <span style={{color:'red'}}> {this.state.errors[\"tglLahir\"]} </span><br/> */}\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label>Email</label>\r\n                                                <input className=\"form-control\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChangeEdit} />\r\n                                                {/* <span style={{color:'red'}}> {this.state.errors[\"email\"]} </span><br/> */}\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label>Facebook ID</label>\r\n                                                <input className=\"form-control\" type=\"text\" name=\"idfb\" value={this.state.idfb} onChange={this.handleChangeEdit} />\r\n                                                {/* <span style={{color:'red'}}> {this.state.errors[\"idfb\"]} </span><br/> */}\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label>G-Plus ID</label>\r\n                                                <input className=\"form-control\" type=\"text\" name=\"idgplus\" value={this.state.idgplus} onChange={this.handleChangeEdit} />\r\n                                                {/* <span style={{color:'red'}}> {this.state.errors[\"idgplus\"]} </span><br/> */}\r\n                                            </div>\r\n                                            {/* <div class=\"form-group\">\r\n                                                <label>Pilih Logo</label><br/>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-4\"></div>\r\n                                                    <div className=\"col-4 text-center\">\r\n                                                        {this.state.imgLogo && [this.state.imgLogo].map((file)=>(\r\n                                                            <img src={URL.createObjectURL(file)} alt=\"\" width=\"150\" height=\"50\" />\r\n                                                        ))}<br/><br/>\r\n                                                        <span className=\"btn btn-dark\" onClick={() => this.inputFileLogo()}>Upload Logo</span>\r\n                                                        <input ref={this.fileInputLogo} type=\"file\" onChange={this.onChangeLogo} hidden />\r\n                                                    </div>\r\n                                                    <div className=\"col-4\"></div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </div>\r\n\r\n                                        <div class=\"card-footer\">\r\n                                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios'\r\n\r\nconst token = localStorage.getItem(\"token\")\r\n\r\nconst instance = axios.create({\r\n    // SERVICE DEV\r\n    // baseURL: 'http://52.163.218.136:8282',\r\n\r\n    // SERVICE LIVE\r\n    baseURL: 'http://po.bisku.id:8282',\r\n\r\n    // SERVIVE MNC\r\n    // baseURL: 'http://192.168.1.7:8282',\r\n\r\n    // SERVICE BASEMENT\r\n    // baseURL: 'http://192.168.0.185:8282',\r\n    headers: {\r\n        // \"access-control-allow-origin\" : \"*\",\r\n        'Authorization': \"Bearer \" + token\r\n    }\r\n});\r\n\r\nexport default instance;\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}