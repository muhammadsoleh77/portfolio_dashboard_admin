{"version":3,"sources":["Endpoint.js","components/Sap/ChangePrice/ListChangePrice.js","components/Sap/ChangePrice/ChangePriceKosong.js","components/Sap/ChangePrice/ChangePrice.js"],"names":["token","localStorage","getItem","instance","axios","create","baseURL","headers","ListChangePrice","props","handleClick","e","setState","currentPage","Number","target","id","state","perPage","bind","strDate","strSplitDate","String","split","date","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","toString","listSap","this","dataSap","indexOfLastData","indexOfFirstData","renderSap","slice","map","el","index","key","style","textAlign","trayek","priceCode","getParsedDate","tanggalAwal","tanggalAkhir","nominal","pageNumber","i","Math","ceil","length","push","renderPageNumber","number","onClick","display","padding","marginRight","border","borderRadius","background","fontSize","fontWeight","width","height","cursor","className","to","Component","ChangePriceKosong","ChangePrice","dataIsi","dataKosong","getSapPrice","API_ENDPOINT","get","then","res","console","log","data","catch","error","href"],"mappings":"sHAAA,qBAEMA,EAAQC,aAAaC,QAAQ,SAE7BC,EAAWC,IAAMC,OAAO,CAK1BC,QAAS,0BAOTC,QAAS,CAEL,cAAiB,UAAYP,KAItBG,O,oJChBMK,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAWVC,YAAc,SAACC,GACX,EAAKC,SAAS,CACVC,YAAaC,OAAOH,EAAEI,OAAOC,OAXjC,EAAKC,MAAQ,CAETJ,YAAa,EACbK,QAAS,IAGb,EAAKR,YAAc,EAAKA,YAAYS,KAAjB,gBATJ,E,0DAkBLC,GACV,IAAIC,EAAeC,OAAOF,GAASG,MAAM,KACrCC,EAAO,IAAIC,KAAKJ,EAAa,IAE7BK,EAAKF,EAAKG,UACVC,EAAKJ,EAAKK,WAAa,EAEvBC,EAAON,EAAKO,cAQhB,OAPIL,EAAK,KACLA,EAAK,IAAMA,GAEXE,EAAK,KACLA,EAAK,IAAMA,IAEfJ,EAAQE,EAAK,IAAME,EAAK,IAAME,GAClBE,a,+BA6CZ,IA7BM,IAAD,OAICC,EAAUC,KAAKzB,MAAM0B,QAJtB,EAM4BD,KAAKjB,MAA9BJ,EANH,EAMGA,YAAaK,EANhB,EAMgBA,QAGfkB,EAAkBvB,EAAcK,EAChCmB,EAAmBD,EAAkBlB,EAIrCoB,EAHiBL,EAAQM,MAAMF,EAAkBD,GAGtBI,KAAI,SAACC,EAAIC,GACtC,OACI,wBAAIC,IAAKD,GACL,wBAAIE,MAAO,CAAEC,UAAW,WAAaJ,EAAGzB,IACxC,wBAAI4B,MAAO,CAAEC,UAAW,WAAaJ,EAAGK,QACxC,wBAAIF,MAAO,CAAEC,UAAW,WAAaJ,EAAGM,WACxC,wBAAIH,MAAO,CAAEC,UAAW,WAAa,EAAKG,cAAcP,EAAGQ,cAC3D,wBAAIL,MAAO,CAAEC,UAAW,WAAa,EAAKG,cAAcP,EAAGS,eAC3D,wBAAIN,MAAO,CAAEC,UAAW,WAAaJ,EAAGU,aAM9CC,EAAa,GACXC,EAAE,EAAGA,GAAGC,KAAKC,KAAKtB,EAAQuB,OAAStC,GAAUmC,IACjDD,EAAWK,KACPJ,GAIR,IAAMK,EAAmBN,EAAWZ,KAAI,SAAAmB,GACpC,OACI,wBACIhB,IAAKgB,EACL3C,GAAI2C,EACJC,QAAS,EAAKlD,YACdkC,MAAO,CACHiB,QAAQ,eACRC,QAAQ,UACRC,YAAY,MACZC,OAAS,oBACTC,aAAa,MACbC,WAAY,UACZC,SAAS,OACTC,WAAW,OAGXC,MAAM,OACNC,OAAO,OAGPC,OAAO,YAGVZ,MAkCb,OACI,6BACI,kBAAC,IAAD,CAAMa,UAAU,6BAA6BC,GAAI,oBAAjD,sBAEO,6BAAK,6BACZ,yBAAKD,UAAU,oBACX,2BAAOA,UAAU,kDACb,+BACI,4BACI,wBAAI5B,MAAO,CAAEC,UAAW,WAAxB,MACA,wBAAID,MAAO,CAAEC,UAAW,WAAxB,eACA,wBAAID,MAAO,CAAEC,UAAW,WAAxB,cACA,wBAAID,MAAO,CAAEC,UAAW,WAAxB,gBACA,wBAAID,MAAO,CAAEC,UAAW,WAAxB,iBACA,wBAAID,MAAO,CAAEC,UAAW,WAAxB,kBAIR,+BAEQP,KAUV,6BACN,wBAAIkC,UAAU,eAIJd,Q,GAnLmBgB,aCJxBC,E,uKAEb,OACI,kC,GAHmCD,a,QCK1BE,E,kDAEjB,WAAYnE,GAAQ,IAAD,8BACf,cAAMA,IAEDQ,MAAQ,CACTkB,QAAS,GAET0C,SAAS,EACTC,YAAY,GAPD,E,gEAYf5C,KAAK6C,gB,oCAGM,IAAD,OACVC,IAAaC,IAAI,yBAChBC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZ,EAAKvE,SAAS,CACViE,SAAS,EACT1C,QAASgD,EAAIG,UAGpBC,OAAM,SAAAC,GACH,EAAK5E,SAAS,CACVkE,YAAY,S,+BAMpB,OACI,yBAAKN,UAAU,mBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,4BACV,wBAAIA,UAAU,mBAAkB,uBAAGiB,KAAK,MAAK,qCAC7C,wBAAIjB,UAAU,0BAAyB,gDAO3D,6BAASA,UAAU,WACf,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAd,gBAEJ,yBAAKA,UAAU,aAEPtC,KAAKjB,MAAM4D,QAAU,kBAAC,EAAD,CAAiB1C,QAASD,KAAKjB,MAAMkB,UAAcD,KAAKjB,MAAM6D,WAAa,kBAAC,EAAD,MAAwB,gB,GA3D3HJ","file":"static/js/58.a8e0af6f.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst token = localStorage.getItem(\"token\")\r\n\r\nconst instance = axios.create({\r\n    // SERVICE DEV\r\n    // baseURL: 'http://52.163.218.136:8282',\r\n\r\n    // SERVICE LIVE\r\n    baseURL: 'http://po.bisku.id:8282',\r\n\r\n    // SERVIVE MNC\r\n    // baseURL: 'http://192.168.1.7:8282',\r\n\r\n    // SERVICE BASEMENT\r\n    // baseURL: 'http://192.168.0.185:8282',\r\n    headers: {\r\n        // \"access-control-allow-origin\" : \"*\",\r\n        'Authorization': \"Bearer \" + token\r\n    }\r\n});\r\n\r\nexport default instance;\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// import { Button } from 'reactstrap'\r\n\r\n// import API_ENDPOINT from '../../../Endpoint'\r\n\r\nexport default class ListChangePrice extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // dataSap: this.props.dataSap,\r\n            currentPage: 1,\r\n            perPage: 10\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.setState({\r\n            currentPage: Number(e.target.id)\r\n        })\r\n    }\r\n\r\n    getParsedDate(strDate){\r\n        var strSplitDate = String(strDate).split(' ');\r\n        var date = new Date(strSplitDate[0]);\r\n        // alert(date);\r\n        var dd = date.getDate();\r\n        var mm = date.getMonth() + 1; //January is 0!\r\n    \r\n        var yyyy = date.getFullYear();\r\n        if (dd < 10) {\r\n            dd = '0' + dd;\r\n        }\r\n        if (mm < 10) {\r\n            mm = '0' + mm;\r\n        }\r\n        date =  dd + \"-\" + mm + \"-\" + yyyy;\r\n        return date.toString();\r\n    }\r\n\r\n    // findNumberOfPages = () => {\r\n    //     return Math.ceil(this.props.dataSap / this.state.perPage)\r\n    // }\r\n\r\n    // setOffset = (value: number) => {\r\n    //     let fromIndex = this.getFromIndex(\r\n    //         value,\r\n    //         this.state.perPage,\r\n    //         this.props.dataSap\r\n    //     )\r\n    //     this.setState({ fromIndex, currentPage: value }, () => )\r\n    // }\r\n\r\n    render() {\r\n        // const today = new Date();\r\n        // console.log(today);\r\n\r\n        const listSap = this.props.dataSap\r\n\r\n        const { currentPage, perPage } = this.state;\r\n\r\n        // Display listSap\r\n        const indexOfLastData = currentPage * perPage\r\n        const indexOfFirstData = indexOfLastData - perPage\r\n        const currentListSap = listSap.slice(indexOfFirstData, indexOfLastData)\r\n\r\n\r\n        const renderSap = currentListSap.map((el, index) => {\r\n            return(\r\n                <tr key={index}>\r\n                    <td style={{ textAlign: 'center' }}>{el.id}</td>\r\n                    <td style={{ textAlign: 'center' }}>{el.trayek}</td>\r\n                    <td style={{ textAlign: 'center' }}>{el.priceCode}</td>\r\n                    <td style={{ textAlign: 'center' }}>{this.getParsedDate(el.tanggalAwal)}</td>\r\n                    <td style={{ textAlign: 'center' }}>{this.getParsedDate(el.tanggalAkhir)}</td>\r\n                    <td style={{ textAlign: 'center' }}>{el.nominal}</td>\r\n                </tr>\r\n            )\r\n        })\r\n\r\n        // Display Page Number\r\n        const pageNumber = []\r\n        for(var i=1; i<=Math.ceil(listSap.length / perPage); i++) {\r\n            pageNumber.push(\r\n                i\r\n            )\r\n        }\r\n\r\n        const renderPageNumber = pageNumber.map(number => {\r\n            return(\r\n                <li\r\n                    key={number}\r\n                    id={number}\r\n                    onClick={this.handleClick}\r\n                    style={{\r\n                        display:'inline-block',\r\n                        padding:'5px 9px',\r\n                        marginRight:'4px',\r\n                        border : '1px solid #c0c0c0',\r\n                        borderRadius:'3px',\r\n                        background: '#e9e9e9',\r\n                        fontSize:'12px',\r\n                        fontWeight:'bold',\r\n\r\n                        // margin:'0 2px 0 2px',\r\n                        width:'30px',\r\n                        height:'30px',\r\n                        // textAlign:'center',\r\n                        // verticalAlign:'middle',\r\n                        cursor:'pointer'\r\n                    }}\r\n                >\r\n                    {number}\r\n                </li>\r\n            )\r\n        })\r\n\r\n        // // Render Page Number\r\n        // renderPageNumberss = () => {\r\n        //     let pages = []\r\n        //     var renderPageNumberss = ''\r\n        //     for(let a = currentPage; a <= currentPage + 5; a++) {\r\n        //         renderPageNumberss = pages.push(\r\n        //             <li\r\n        //                 key={a}\r\n        //                 // id={number}\r\n        //                 onClick={() => this.handleClick(a)}\r\n        //                 style={{\r\n        //                     display:'inline-block',\r\n        //                     border : '1px solid blue',\r\n        //                     background: 'green',\r\n        //                     margin:'0 2px 0 2px',\r\n        //                     width:'30px',\r\n        //                     height:'30px',\r\n        //                     textAlign:'center',\r\n        //                     verticalAlign:'middle',\r\n        //                     cursor:'pointer'\r\n        //                 }}\r\n        //             >\r\n        //                 {a}\r\n        //             </li>\r\n        //         )\r\n        //     }\r\n        //     return pages\r\n        // }\r\n\r\n        return (\r\n            <div>\r\n                <Link className=\"btn btn-primary pull-right\" to={\"/sap/tambahHarga\"}>\r\n                    Change Price S.A.P\r\n                </Link><br/><br/>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-bordered table-striped text-nowrap\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ textAlign: 'center' }}>ID</th>\r\n                                <th style={{ textAlign: 'center' }}>Nama Trayek</th>\r\n                                <th style={{ textAlign: 'center' }}>Price Code</th>\r\n                                <th style={{ textAlign: 'center' }}>Tanggal Awal</th>\r\n                                <th style={{ textAlign: 'center' }}>Tanggal Akhir</th>\r\n                                <th style={{ textAlign: 'center' }}>Nominal (Rp)</th>\r\n                                {/* <th style={{ textAlign: 'center' }}>Aksi</th> */}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                renderSap\r\n                            }\r\n                        </tbody>\r\n                    </table>                        \r\n                    {/* <ul>\r\n                        {renderSap}\r\n                    </ul>\r\n                    <ul id=\"page-numbers\">\r\n                        {renderPageNumber}\r\n                    </ul> */}\r\n                </div><br/>\r\n                <ul className=\"text-center\"\r\n                            // style={{\r\n                            //     display:'inline-block'\r\n                            // }}\r\n                        >{renderPageNumber}</ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ChangePriceKosong extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport ListChangePrice from './ListChangePrice'\r\nimport ChangePriceKosong from './ChangePriceKosong'\r\n\r\nimport API_ENDPOINT from '../../../Endpoint'\r\n\r\nexport default class ChangePrice extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dataSap: [],\r\n\r\n            dataIsi: false,\r\n            dataKosong: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSapPrice();\r\n    }\r\n\r\n    getSapPrice() {\r\n        API_ENDPOINT.get('/admin/sap/price/list')\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n                dataIsi: true,\r\n                dataSap: res.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                dataKosong: true\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid header-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <ol className=\"breadcrumb float-sm-left\">\r\n                                    <li className=\"breadcrumb-item\"><a href=\"# \"><b>Home</b></a></li>\r\n                                    <li className=\"breadcrumb-item active\"><b>S.A.P Price</b></li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <h3 className=\"card-title\">S.A.P Price</h3>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        {\r\n                                            this.state.dataIsi ? <ListChangePrice dataSap={this.state.dataSap} /> : this.state.dataKosong ? <ChangePriceKosong /> : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}