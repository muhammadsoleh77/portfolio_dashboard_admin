{"version":3,"sources":["components/Users/DaftarPengguna/TambahPengguna.js","Endpoint.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["TambahPengguna","props","handleChangeDateTglLahir","date","setState","dateTglLahir","inputFileLogo","undefined","fileInputLogo","current","click","onChangeLogo","event","imgLogo","target","files","changePo","e","idPo","value","API_ENDPOINT","get","then","res","dataBus","data","OptionRole","x","name","label","handleChangeRole","namaRol","role","exist","state","dataRoles","length","a","ada","z","push","idTabel","selectedPo","console","log","removeRole","index","splice","OptionPoLoket","nama","handleChangePoLoket","selectedPoLoket","paramPo","orderBy","pageNo","pageRow","post","content","dataLoket","OptionPoCrew","handleChangePoCrew","selectedPoCrew","dataBusCrew","handleChangePos","handleChangeCrew","handleChangeLoket","React","createRef","dataPo","dataRole","roles","fields","errors","this","endpointPo","endpointRole","formIsValid","field","preventDefault","tglLahirs","Moment","format","addUser","email","gender","idfb","idgplus","nohp","password","tglLahir","handleValidation","alert","message","history","catch","error","rol","className","map","el","placeholder","onChange","options","id","idBus","href","class","onSubmit","tambahData","bind","type","handleChange","style","color","onClick","dateFormat","placeholderText","selected","Component","token","localStorage","getItem","instance","axios","create","baseURL","headers","_arrayLikeToArray","arr","len","i","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","Object","from","o","minLen","n","prototype","toString","call","slice","constructor","test","TypeError"],"mappings":"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","file":"static/js/35.33515428.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Select from 'react-select'\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport Moment from 'moment'\r\n\r\nimport API_ENDPOINT from '../../../Endpoint'\r\n\r\nexport default class TambahPengguna extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.fileInputLogo = React.createRef()\r\n\r\n        this.state = {\r\n            dataPo: [],\r\n            dataRole: [],\r\n            dataRoles: [],\r\n            dataLoket: [],\r\n            dataBusCrew: [],\r\n            dataBus: {},\r\n            ada: false,\r\n\r\n            roles: '',\r\n            dateTglLahir: '',\r\n\r\n            fields: {},\r\n            errors: {},\r\n        }\r\n    }\r\n\r\n    handleChangeDateTglLahir = (date) => {\r\n        this.setState({\r\n            dateTglLahir: date\r\n        })\r\n    }\r\n\r\n    inputFileLogo = () => {\r\n        if (this.fileInputLogo.current !== undefined && this.fileInputLogo.current.click !== undefined)\r\n            this.fileInputLogo.current.click()\r\n    }\r\n\r\n    onChangeLogo = (event)=>{\r\n        this.setState({\r\n            imgLogo: event.target.files[0]\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.endpointPo()\r\n        this.endpointRole()\r\n    }\r\n\r\n    endpointPo() {\r\n        API_ENDPOINT.get('/admin/po/getAll')\r\n        .then(res => {\r\n            this.setState({\r\n                dataPo: res.data\r\n            })\r\n        })\r\n    }\r\n\r\n    endpointRole() {\r\n        API_ENDPOINT.get('/admin/role/list')\r\n        .then(res => {\r\n            this.setState({\r\n                dataRole: res.data\r\n            })\r\n        })\r\n    }\r\n\r\n    handleValidation(){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        // // Validasi Bus\r\n        // if(!fields[\"idTable\"]){\r\n        //     formIsValid = false;\r\n        //     errors[\"idTable\"] = \"Tidak boleh kosong\";\r\n        // }\r\n\r\n        // Validasi Nama\r\n        if(!fields[\"name\"]){\r\n            formIsValid = false;\r\n            errors[\"name\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        // Validasi Role\r\n        if(!fields[\"password\"]){\r\n            formIsValid = false;\r\n            errors[\"password\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        // Validasi Email\r\n        if(!fields[\"email\"]){\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        // Validasi Gender\r\n        if(!fields[\"gender\"]){\r\n            formIsValid = false;\r\n            errors[\"gender\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        // Validasi idFb\r\n        if(!fields[\"idfb\"]){\r\n            formIsValid = false;\r\n            errors[\"idfb\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        // Validasi idGplus\r\n        if(!fields[\"idgplus\"]){\r\n            formIsValid = false;\r\n            errors[\"idgplus\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        // // Validasi Tgl Lahir\r\n        // if(!fields[\"tglLahir\"]){\r\n        //     formIsValid = false;\r\n        //     errors[\"tglLahir\"] = \"Tidak boleh kosong\";\r\n        // }\r\n\r\n        // Validasi Tgl Lahir\r\n        if(!this.state.dateTglLahir) {\r\n            formIsValid = false;\r\n            errors[\"tglLahir\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        // Validasi No HP\r\n        if(!fields[\"nohp\"]){\r\n            formIsValid = false;\r\n            errors[\"nohp\"] = \"Tidak boleh kosong\";\r\n        }\r\n\r\n        this.setState({errors: errors});\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChange(field, e){\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        this.setState({fields});\r\n    }\r\n\r\n    changePo = (e) => {\r\n        \r\n        this.setState({\r\n            idPo: e.target.value\r\n        })\r\n\r\n        const idPo = e.target.value\r\n        API_ENDPOINT.get('/admin/bus/' + idPo)\r\n        .then(res => {\r\n            this.setState({\r\n                dataBus: res.data\r\n            })\r\n        })\r\n    }\r\n\r\n    // START OPTION ROLE\r\n    OptionRole = (x) => {\r\n        return {value: x.name, label: x.name}\r\n    }\r\n\r\n    handleChangeRole = (e) => {\r\n\r\n        this.setState({namaRol: e.value})\r\n\r\n        const role = e.value\r\n\r\n        var exist = false;\r\n        if(this.state.dataRoles.length>0) {\r\n            for(var a=0; a<this.state.dataRoles.length; a++) {\r\n                if(this.state.dataRoles[a].role === role) {\r\n                    exist = true;\r\n                    this.setState({\r\n                        ada: exist\r\n                    })\r\n                    a = this.state.dataRoles.length\r\n                }\r\n            }\r\n            if(!exist) {\r\n                var z = this.state.dataRoles;\r\n                z.push({\r\n                    role: e.value,\r\n                    idTabel: this.state.selectedPo\r\n                })\r\n                this.setState({\r\n                    dataRoles: z\r\n                })\r\n                // this.state.dataRoles.push({name})\r\n            }\r\n        } else {\r\n            var x = this.state.dataRoles;\r\n                x.push({\r\n                    role: e.value,\r\n                    idTabel: this.state.selectedPo\r\n                })\r\n            this.setState({\r\n                dataRoles: x\r\n            })\r\n            // this.state.dataRoles.push({name})\r\n        }\r\n        console.log(this.state.dataRoles);\r\n\r\n    }\r\n\r\n    removeRole = (index) => {\r\n        // console.log(index);\r\n        const dataRoles = [...this.state.dataRoles]\r\n        // if(index > -1) {\r\n            dataRoles.splice(index, 1)\r\n            this.setState({dataRoles}, () => {console.log(this.state.dataRoles);})\r\n        // }\r\n    }\r\n    // END ROLE\r\n\r\n    // START OPTION P.O LOKET\r\n    OptionPoLoket = (x) => {\r\n        return {value: x.idPo, label: x.nama}\r\n    }\r\n\r\n    handleChangePoLoket = (e) => {\r\n        this.setState({selectedPoLoket: e.value})\r\n\r\n        const paramPo = {\r\n            idPo: e.value,\r\n            orderBy: 'idPo',\r\n            pageNo: 0,\r\n            pageRow: 100\r\n        }\r\n\r\n        API_ENDPOINT.post('/admin/loket/list', paramPo)\r\n        .then(res => {\r\n            console.log(res.data.content);\r\n            this.setState({\r\n                dataLoket: res.data.content\r\n            })\r\n        })\r\n\r\n        // for(var i=0; i<this.state.dataRoles.length; i++) {\r\n        //     var x = this.state.dataRoles\r\n        //     x.push({\r\n        //         name: this.state.dataRoles[i].name,\r\n        //         idTabel: e.value\r\n        //     })\r\n        //     this.setState({\r\n        //         dataRoles: x\r\n        //     })\r\n        //     console.log(x);\r\n        // }\r\n    }\r\n    // END P.O LOKET\r\n\r\n    // START OPTION P.O CREW\r\n    OptionPoCrew = (x) => {\r\n        return {value: x.idPo, label: x.nama}\r\n    }\r\n\r\n    handleChangePoCrew = (e) => {\r\n        this.setState({selectedPoCrew: e.value})\r\n\r\n        API_ENDPOINT.get('/admin/bus/listAll/' + e.value)\r\n        .then(res => {\r\n            this.setState({\r\n                dataBusCrew : res.data\r\n            })\r\n        })\r\n    }\r\n    // END OPTION P.O CREW\r\n\r\n    handleChangePos = (e, index) => {\r\n        const dataRoles = [...this.state.dataRoles]\r\n\r\n        dataRoles[index].idTabel = e.target.value\r\n\r\n        this.setState({dataRoles})\r\n    }\r\n\r\n    handleChangeCrew = (e, index) => {\r\n        const dataRoles = [...this.state.dataRoles]\r\n\r\n        dataRoles[index].idTabel = e.target.value\r\n\r\n        this.setState({dataRoles})\r\n    }\r\n\r\n    handleChangeLoket = (e, index) => {\r\n        const dataRoles = [...this.state.dataRoles]\r\n\r\n        dataRoles[index].idTabel = e.target.value\r\n\r\n        this.setState({dataRoles})\r\n    }\r\n\r\n    tambahData(e) {\r\n        e.preventDefault()\r\n\r\n        const tglLahirs = Moment(this.state.dateTglLahir).format(\"YYYY-MM-DD\")\r\n\r\n        // let formData = new FormData();\r\n\r\n        // if(this.state.imgLogo) {\r\n        //     formData.append('foto', this.state.imgLogo);\r\n        // }\r\n        // formData.append('email', this.state.fields['email']);\r\n        // formData.append('gender', this.state.fields['gender']);\r\n        // formData.append('idfb', this.state.fields['idfb']);\r\n        // formData.append('idgplus', this.state.fields['idgplus']);\r\n        // formData.append('name', this.state.fields['name']);\r\n        // formData.append('nohp', this.state.fields['nohp']);\r\n        // formData.append('password', this.state.fields['password']);\r\n        // formData.append('role', JSON.stringify(this.state.dataRoles));\r\n        // formData.append('tglLahir', this.state.fields['tglLahir']);\r\n\r\n        const addUser = {\r\n            email: this.state.fields['email'],\r\n            gender: this.state.fields['gender'],\r\n            idfb: this.state.fields['idfb'],\r\n            idgplus: this.state.fields['idgplus'],\r\n            name: this.state.fields['name'],\r\n            nohp: this.state.fields['nohp'],\r\n            password: this.state.fields['password'],\r\n            role: this.state.dataRoles,\r\n            // tglLahir: this.state.fields['tglLahir']\r\n            tglLahir: tglLahirs\r\n        }\r\n        console.log(addUser);\r\n\r\n        if(this.handleValidation()){\r\n            // API_ENDPOINT({\r\n            //     method: 'post',\r\n            //     url: '/admin/user/add',\r\n            //     data: formData,\r\n            //     headers: {\r\n            //         'Content-Type': 'multipart/form-data'\r\n            //     }\r\n            // }).then(res => {\r\n            //     console.log(res);\r\n            //     alert(\"Berhasil tambah data\");\r\n            //     this.props.history.push('/user/daftarPengguna')\r\n            // }).catch(error => {\r\n            //     console.log(error);\r\n            //     alert('Error, Harap input semua data');\r\n            // })\r\n            API_ENDPOINT.post('/admin/user/add', addUser)\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                alert(res.data.message);\r\n                this.props.history.push('/user/daftarPengguna');\r\n            })\r\n            .catch(error => {\r\n                alert('error')\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let rol;\r\n        // let dataTabel;\r\n\r\n        if(this.state.namaRol === 'ROLE_PO') {\r\n            rol = <div className=\"form-group\">\r\n                <label>Daftar P.O</label>\r\n                <table className=\"table table-bordered text-nowrap\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-center\">ID TABEL</th>\r\n                            <th className=\"text-center\">Nama P.O</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.dataPo.map((el) => (\r\n                                <tr>\r\n                                    <td className=\"text-center\">{el.idPo}</td>\r\n                                    <td className=\"text-center\">{el.nama}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        } else if(this.state.namaRol === 'ROLE_LOKET') {\r\n            rol = <div className=\"form-group\">\r\n                <label>Pilih P.O</label>\r\n                <Select\r\n                    name=\"po\"\r\n                    placeholder=\"Pilih P.O\"\r\n                    onChange={this.handleChangePoLoket}\r\n                    options={this.state.dataPo.map(x => this.OptionPoLoket(x))}\r\n                />\r\n            {\r\n                this.state.selectedPoLoket && (\r\n                    <div className=\"form-group\">\r\n                        <label>Daftar Loket</label>\r\n                        <table className=\"table table-bordered text-nowrap\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"text-center\">ID TABEL</th>\r\n                                    <th className=\"text-center\">Nama Loket</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.dataLoket.map((el) => (\r\n                                        <tr>\r\n                                            <td className=\"text-center\">{el.id}</td>\r\n                                            <td className=\"text-center\">{el.nama}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        } else if(this.state.namaRol === 'ROLE_CREW') {\r\n            rol = <div className=\"form-group\">\r\n                <label>Pilih P.O</label>\r\n                <Select\r\n                    name=\"po\"\r\n                    placeholder=\"Pilih P.O\"\r\n                    onChange={this.handleChangePoCrew}\r\n                    options={this.state.dataPo.map(x => this.OptionPoCrew(x))}\r\n                />\r\n            {\r\n                this.state.selectedPoCrew && (\r\n                <div className=\"form-group\">\r\n                    <label>Daftar Bus</label>\r\n                    <table className=\"table table-bordered text-nowrap\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-center\">ID TABEL</th>\r\n                                <th className=\"text-center\">Nama Bus</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.dataBusCrew.map((el) => (\r\n                                    <tr>\r\n                                        <td className=\"text-center\">{el.idBus}</td>\r\n                                        <td className=\"text-center\">{el.id}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                )\r\n            }\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid header-fluid\">\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-sm-6\">\r\n                        <ol className=\"breadcrumb float-sm-left\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"# \"><b>Home</b></a></li>\r\n                            <li className=\"breadcrumb-item active\"><b>Tambah Pengguna</b></li>\r\n                        </ol>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <section class=\"content\">\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"card card-primary\">\r\n                                    <div class=\"card-header\">\r\n                                        <h3 class=\"card-title\">Tambah Pengguna</h3>\r\n                                    </div>\r\n                                    <form onSubmit={this.tambahData.bind(this)}>\r\n                                        <div class=\"card-body\">\r\n                                            {/* <div class=\"form-group\">\r\n                                                <label>Pilih P.O</label>\r\n                                                <select class=\"form-control\" onChange={this.changePo} style={{ width: '100%' }}>\r\n                                                    <option disabled selected>Pilih P.O</option>\r\n                                                    {\r\n                                                        this.state.dataPo.map((el) => {\r\n                                                            return (\r\n                                                                <option key={el.idPo} value={el.idPo}>{el.nama}</option>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </div> */}\r\n                                            {/* <div class=\"form-group\">\r\n                                                <label>Pilih Bus</label>\r\n                                                <select class=\"form-control\" onChange={this.handleChange.bind(this, 'idTable')} style={{ width: '100%' }}>\r\n                                                    <option disabled selected>Pilih Bus</option>\r\n                                                    <option value=\"1\">BUS 001</option>\r\n                                                    <option value=\"2\">BUS 002</option>\r\n                                                    <option value=\"3\">BUS 003</option>\r\n                                                </select>\r\n                                                <span style={{color:'red'}}> {this.state.errors[\"idTable\"]} </span><br/>\r\n                                            </div> */}\r\n                                            <div class=\"form-group\">\r\n                                                <label>No Handphone (Default Username)</label>\r\n                                                <input className=\"form-control\" type=\"text\" onChange={this.handleChange.bind(this, \"nohp\")} />\r\n                                                <span style={{color:'red'}}> {this.state.errors[\"nohp\"]} </span><br/>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label>Nama Pengguna</label>\r\n                                                <input className=\"form-control\" type=\"text\" onChange={this.handleChange.bind(this, \"name\")} />\r\n                                                <span style={{color:'red'}}> {this.state.errors[\"name\"]} </span><br/>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label>Password</label>\r\n                                                <input className=\"form-control\" type=\"text\" name=\"password\" onChange={this.handleChange.bind(this,\"password\")} />\r\n                                                <span style={{color:'red'}}> {this.state.errors[\"password\"]} </span><br/>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label>Pilih Role</label>\r\n                                                <Select\r\n                                                    name=\"role\"\r\n                                                    placeholder=\"Pilih Role\"\r\n                                                    onChange={this.handleChangeRole}\r\n                                                    options={this.state.dataRole.map(x => this.OptionRole(x))}\r\n                                                />\r\n                                                {/* <select class=\"form-control\" onChange={this.handleChangeRole} style={{ width: '100%' }}>\r\n                                                    <option disabled selected>Pilih Role</option>\r\n                                                    {\r\n                                                        this.state.dataRole.map((el) => {\r\n                                                            return (\r\n                                                                <option key={el.id} value={el.name}>{el.name}</option>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                                <span style={{color:'red'}}> {this.state.errors[\"roleName\"]} </span><br/> */}\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                                {rol}\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group\">\r\n                                                <label>Role Terpilih</label>\r\n                                                <div className=\"lintasan\">\r\n                                                    {\r\n                                                        this.state.dataRoles.map((el, index) => {\r\n                                                            // console.log(el);\r\n                                                            if(el.role === 'ROLE_PO') \r\n                                                                return(\r\n                                                                    <span>\r\n                                                                        <i class=\"btn btn-city btn-xs\">\r\n                                                                            {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                                            <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                            {/* <Select\r\n                                                                                name=\"po\"\r\n                                                                                placeholder=\"Pilih P.O\"\r\n                                                                                onChange={this.handleChangePo}\r\n                                                                                options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                                            /> */}\r\n                                                                            <input class=\"form-control\" type=\"number\" onChange={(e) => this.handleChangePos(e, index)} name=\"urutan\"  placeholder=\"Input ID Tabel\" />\r\n                                                                        </i>\r\n                                                                        <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    </span>\r\n                                                                )\r\n                                                            \r\n                                                            if(el.role === 'ROLE_USER') \r\n                                                                return(\r\n                                                                    <span>\r\n                                                                        <i class=\"btn btn-city btn-xs\">\r\n                                                                            {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                                            <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                            {/* <Select\r\n                                                                                name=\"po\"\r\n                                                                                placeholder=\"Pilih P.O\"\r\n                                                                                onChange={this.handleChangePo}\r\n                                                                                options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                                            /> */}\r\n                                                                            {/* <input class=\"form-control\" type=\"number\" onChange={(e) => this.handleChangeUser(e, index)} name=\"urutan\"  placeholder=\"Input ID Tabel\" /> */}\r\n                                                                        </i>\r\n                                                                        <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    </span>\r\n                                                                )\r\n\r\n                                                            if(el.role === 'ROLE_ADMIN') \r\n                                                                return(\r\n                                                                    <span>\r\n                                                                        <i class=\"btn btn-city btn-xs\">\r\n                                                                            {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                                            <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                            {/* <Select\r\n                                                                                name=\"po\"\r\n                                                                                placeholder=\"Pilih P.O\"\r\n                                                                                onChange={this.handleChangePo}\r\n                                                                                options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                                            /> */}\r\n                                                                            {/* <input class=\"form-control\" type=\"number\" onChange={(e) => this.handleChangeUser(e, index)} name=\"urutan\"  placeholder=\"Input ID Tabel\" /> */}\r\n                                                                        </i>\r\n                                                                        <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    </span>\r\n                                                                )\r\n                                                            \r\n                                                            if(el.role === 'ROLE_AGEN') \r\n                                                                return(\r\n                                                                    <span>\r\n                                                                        <i class=\"btn btn-city btn-xs\">\r\n                                                                            {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                                            <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                            {/* <Select\r\n                                                                                name=\"po\"\r\n                                                                                placeholder=\"Pilih P.O\"\r\n                                                                                onChange={this.handleChangePo}\r\n                                                                                options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                                            /> */}\r\n                                                                            {/* <input class=\"form-control\" type=\"number\" onChange={(e) => this.handleChangeUser(e, index)} name=\"urutan\"  placeholder=\"Input ID Tabel\" /> */}\r\n                                                                        </i>\r\n                                                                        <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    </span>\r\n                                                                )\r\n                                                            \r\n                                                            if(el.role === 'ROLE_PARTNER') \r\n                                                                return(\r\n                                                                    <span>\r\n                                                                        <i class=\"btn btn-city btn-xs\">\r\n                                                                            {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                                            <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                            {/* <Select\r\n                                                                                name=\"po\"\r\n                                                                                placeholder=\"Pilih P.O\"\r\n                                                                                onChange={this.handleChangePo}\r\n                                                                                options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                                            /> */}\r\n                                                                            {/* <input class=\"form-control\" type=\"number\" onChange={(e) => this.handleChangeCrew(e, index)} name=\"urutan\"  placeholder=\"Input ID Tabel\" /> */}\r\n                                                                        </i>\r\n                                                                        <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    </span>\r\n                                                                )\r\n\r\n                                                            // if(el.name === 'ROLE_CREW')\r\n                                                            if(this.state.selectedPoCrew)\r\n                                                                return(\r\n                                                                    <span>\r\n                                                                        <i class=\"btn btn-city btn-xs\">\r\n                                                                            {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                                            <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                            {/* <Select\r\n                                                                                name=\"po\"\r\n                                                                                placeholder=\"Pilih P.O\"\r\n                                                                                onChange={this.handleChangePo}\r\n                                                                                options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                                            /> */}\r\n                                                                            <input class=\"form-control\" type=\"number\" onChange={(e) => this.handleChangeCrew(e, index)} name=\"urutan\"  placeholder=\"Input ID Tabel\" />\r\n                                                                        </i>\r\n                                                                        <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    </span>\r\n                                                                )\r\n\r\n                                                            // if(el.name === 'ROLE_LOKET')\r\n                                                            if(this.state.selectedPoLoket)\r\n                                                                return(\r\n                                                                    <span>\r\n                                                                        <i class=\"btn btn-city btn-xs\">\r\n                                                                            {el.role}&nbsp;&nbsp;&nbsp;\r\n                                                                            <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                                            {/* <Select\r\n                                                                                name=\"po\"\r\n                                                                                placeholder=\"Pilih P.O\"\r\n                                                                                onChange={this.handleChangePo}\r\n                                                                                options={this.state.dataPo.map(x => this.OptionPo(x))}\r\n                                                                            /> */}\r\n                                                                            <input class=\"form-control\" type=\"number\" onChange={(e) => this.handleChangeLoket(e, index)} name=\"urutan\"  placeholder=\"Input ID Tabel\" />\r\n                                                                        </i>\r\n                                                                        <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                                    </span>\r\n                                                                )\r\n\r\n                                                            \r\n                                                            // return (\r\n                                                            //     <span>\r\n                                                            //         <i class=\"btn btn-city btn-xs\">\r\n                                                            //             {el.name}&nbsp;&nbsp;&nbsp;\r\n                                                            //             <span onClick={this.removeRole.bind(this, index)}>&times;</span><br/>\r\n                                                            //             <input class=\"form-control\" type=\"number\" name=\"urutan\"  placeholder=\"Input ID Tabel\" />\r\n                                                            //         </i>\r\n                                                            //         <span class=\"strip\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\r\n                                                            //     </span>\r\n                                                            // )\r\n                                                            return(\r\n                                                                <div></div>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                    {/* {\r\n                                                        this.props.lintasans.map((el, index) => {\r\n                                                            // console.log(el);\r\n                                                            return(\r\n                                                                <span>\r\n                                                                    <i class=\"btn btn-city btn-xs\">\r\n                                                                        {el.namaLokasi}&nbsp;&nbsp;&nbsp;\r\n                                                                        <span onClick={this.props.removeLintasan.bind(this, index)}>&times;</span><br/>\r\n                                                                        <input class=\"form-control\" type=\"number\" name=\"urutan\" onChange={(e) => this.props.urutan(e.target, el)} placeholder=\"input urutan\" />\r\n                                                                    </i>\r\n                                                                    <span class=\"strip\"> ---- </span>\r\n                                                                </span>\r\n                                                            )\r\n                                                        })\r\n                                                    } */}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label>Jenis Kelamin</label>\r\n                                                <div className=\"radio\">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        name=\"gender\" \r\n                                                        value=\"Laki-laki\"\r\n                                                        //   checked={isPublished === true}\r\n                                                        onChange={this.handleChange.bind(this, \"gender\")} /> Laki-laki &nbsp;&nbsp;&nbsp;\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        name=\"gender\" \r\n                                                        value=\"Perempuan\"\r\n                                                        //   checked={isPublished === true}\r\n                                                        onChange={this.handleChange.bind(this, \"gender\")} /> Perempuan &nbsp;&nbsp;&nbsp;\r\n                                                </div>\r\n                                                <span style={{color:'red'}}> {this.state.errors[\"gender\"]} </span><br/>\r\n                                            </div>\r\n                                            <div class=\"form-group customDatePickerWidth\">\r\n                                                <label>Tanggal Lahir</label>\r\n                                                <DatePicker\r\n                                                    className=\"form-control\" \r\n                                                    dateFormat=\"dd-MM-yyyy\"\r\n                                                    placeholderText=\"Tanggal Lahir\" \r\n                                                    selected={this.state.dateTglLahir} \r\n                                                    onChange={this.handleChangeDateTglLahir}\r\n                                                />\r\n                                                <span style={{color:'red'}}> {this.state.errors[\"tglLahir\"]} </span><br/>\r\n                                            </div>\r\n                                            {/* <div class=\"form-group\">\r\n                                                <label>Tanggal Lahir</label>\r\n                                                <input className=\"form-control\" type=\"date\" onChange={this.handleChange.bind(this, \"tglLahir\")} />\r\n                                                <span style={{color:'red'}}> {this.state.errors[\"tglLahir\"]} </span><br/>\r\n                                            </div> */}\r\n                                            <div class=\"form-group\">\r\n                                                <label>Email</label>\r\n                                                <input className=\"form-control\" type=\"email\" onChange={this.handleChange.bind(this, \"email\")} />\r\n                                                <span style={{color:'red'}}> {this.state.errors[\"email\"]} </span><br/>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label>Facebook ID</label>\r\n                                                <input className=\"form-control\" type=\"text\" onChange={this.handleChange.bind(this, \"idfb\")} />\r\n                                                <span style={{color:'red'}}> {this.state.errors[\"idfb\"]} </span><br/>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label>G-Plus ID</label>\r\n                                                <input className=\"form-control\" type=\"text\" onChange={this.handleChange.bind(this, \"idgplus\")} />\r\n                                                <span style={{color:'red'}}> {this.state.errors[\"idgplus\"]} </span><br/>\r\n                                            </div>\r\n                                            {/* <div class=\"form-group\">\r\n                                                <label>Pilih Logo</label><br/>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-4\"></div>\r\n                                                    <div className=\"col-4 text-center\">\r\n                                                        {this.state.imgLogo && [this.state.imgLogo].map((file)=>(\r\n                                                            <img src={URL.createObjectURL(file)} alt=\"\" width=\"150\" height=\"50\" />\r\n                                                        ))}<br/><br/>\r\n                                                        <span className=\"btn btn-dark\" onClick={() => this.inputFileLogo()}>Upload Logo</span>\r\n                                                        <input ref={this.fileInputLogo} type=\"file\" onChange={this.onChangeLogo} hidden />\r\n                                                    </div>\r\n                                                    <div className=\"col-4\"></div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </div>\r\n\r\n                                        <div class=\"card-footer\">\r\n                                            <button type=\"submit\" class=\"btn btn-primary\">Tambah</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios'\r\n\r\nconst token = localStorage.getItem(\"token\")\r\n\r\nconst instance = axios.create({\r\n    // SERVICE DEV\r\n    // baseURL: 'http://52.163.218.136:8282',\r\n\r\n    // SERVICE LIVE\r\n    baseURL: 'http://po.bisku.id:8282',\r\n\r\n    // SERVIVE MNC\r\n    // baseURL: 'http://192.168.1.7:8282',\r\n\r\n    // SERVICE BASEMENT\r\n    // baseURL: 'http://192.168.0.185:8282',\r\n    headers: {\r\n        // \"access-control-allow-origin\" : \"*\",\r\n        'Authorization': \"Bearer \" + token\r\n    }\r\n});\r\n\r\nexport default instance;\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}